---
name: build-charon
on:
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"
      - "pluto/**"
      - "juno/**"
  schedule:
    - cron: "05 10 * * 0" # 10:05am UTC every sunday
  workflow_dispatch:

env:
  IMAGE_DESC: "Experiements with fedora ostree containers"
  IMAGE_NAME: "charon"

jobs:
  build_charon:
    name: Build and push image
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: sigstore/cosign-installer@v3.7.0
        if: github.event_name != 'pull_request'

      - name: Image Metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ${{ inputs.image_name }}

          labels: |
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/${{ github.repository }}/main/README.md
            org.opencontainers.image.description=${{ env.IMAGE_DESC }}
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}

      - name: Install buildah
        run: |
          sudo apt-get update
          sudo apt-get install -y buildah

      - name: Build image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ./Containerfile
          image: ${{ env.IMAGE_NAME }}
          build-args: |
            BASE_IMAGE_NAME=kinoite
            HOST=charon
          labels: ${{ steps.meta.outputs.labels }}
          context: ${{ env.GITHUB_WORKSPACE }}
          oci: false

      - name: Install podman
        run: |
          sudo apt-get update
          sudo apt-get install -y podman

      - name: Push Image to GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push
        with:
          image: ${{ steps.build_image.outputs.image }}
          registry: "ghcr.io/${{ github.repository_owner }}"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          extra-args: |
            --disable-content-trust

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Sign container image
        if: github.event_name != 'pull_request'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}@${TAGS}
        env:
          TAGS: ${{ steps.push.outputs.digest }}
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
