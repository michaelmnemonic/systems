---
name: build-image
on:
  workflow_call:
    inputs:
      image_name:
        description: "Name of the image: pluto, or juno"
        required: true
        type: string
      base_image_name:
        description: "Name of the base image: silverblue, or kinoite"
        required: true
        type: string

env:
  IMAGE_DESC: "Experiements with fedora ostree containers"

jobs:
  build_image:
    name: Build and push image
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: sigstore/cosign-installer@v3.7.0
        if: github.event_name != 'pull_request'

      - name: Image Metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ${{ inputs.image_name }}

          labels: |
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/${{ github.repository }}/main/README.md
            org.opencontainers.image.description=${{ env.IMAGE_DESC }}
            org.opencontainers.image.title=${{ inputs.image_name }}

      - name: Build image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ./Containerfile
          image: ${{ inputs.image_name }}
          build-args: |
            BASE_IMAGE_NAME=${{ inputs.base_image_name }}
            HOST=${{ inputs.image_name }}
          labels: ${{ steps.meta.outputs.labels }}
          context: ${{ env.GITHUB_WORKSPACE }}
          oci: false

      - name: Push Image to GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push
        with:
          image: ${{ steps.build_image.outputs.image }}
          registry: "ghcr.io/${{ github.repository_owner }}"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          extra-args: |
            --disable-content-trust

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Sign container image
        if: github.event_name != 'pull_request'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}@${TAGS}
        env:
          TAGS: ${{ steps.push.outputs.digest }}
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}
